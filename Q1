Question1:-
sqoop import \
--connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" \
--username retail_dba \
--password cloudera \
--table orders \
--compress \
--compression-codec org.apache.hadoop.io.compress.SnappyCodec \
--target-dir /user/cloudera/problem1/orders \
--as-avrodatafile \
--delete-target-dir 

sqoop import \
--connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" \
--username retail_dba \
--password cloudera \
--table order_items \
--target-dir /user/cloudera/problem1/order-items \
--compress \
--compression-codec org.apache.hadoop.io.compress.SnappyCodec \
--as-avrodatafile \
--delete-target-dir

hadoop fs -ls /user/cloudera/problem1/orders

hadoop fs -ls /user/cloudera/problem1/order-items

import com.databricks.spark.avro._;
var oDF = sqlContext.read.avro("/user/cloudera/problem1/orders");
oDF.show();

var oiDF =sqlContext.read.avro("/user/cloudera/problem1/order-items");
oiDF.show();

var order_join = oDF.join(oiDF,oDF("order_id")===oiDF("order_item_id"));

order_join.registerTempTable("order_join");

var sqlR = sqlContext.sql("select to_date(from_unixtime(cast(order_date/1000 as bigint))) as Order_Date,order_status as Order_status,count(distinct(order_id)) as total_orders,cast(sum(order_item_subtotal)as Decimal (10,2)) as total_amount from order_join group by to_date(from_unixtime(cast(order_date/1000 as bigint))),order_status order by Order_Date desc,Order_status,total_orders desc,total_amount");

sqlR.show();



sqlContext.setConf("spark.sql.parquet.compression.codec","gzip");
sqlR.write.parquet("/user/cloudera/problem1/result4b-gzip")

sqlContext.setConf("spark.sql.parquet.compression.codec","snappy");
sqlR.write.parquet("/user/cloudera/problem1/result4b-snappy");

sqlR.map(x => x(0)+","+x(1)+","+x(2)+","+x(3))saveAsTextFile("/user/cloudera/problem1/result4b-csv");

mysql -h localhost -u retail_dba -p

create table retail_db.result
(order_date varchar(255) not null,
order_status varchar(255) not null, 
total_orders int,
total_amount numeric, 
constraint pk_order_result primary key (order_date,order_status)); 

sqoop export \
--table result \
--connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" \
--username retail_dba \
--password cloudera \
--export-dir "/user/cloudera/problem1/result4b-csv" \
--columns "order_date,order_status,total_orders,total_amount"


----------------------------------------------------------------------------------
